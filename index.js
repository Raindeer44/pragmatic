'use strict';

module.exports = {
  env: {
    es6: true,
    node: true,
    browser: true,
  },
  parserOptions: {
    ecmaVersion: 2018,
  },
  extends: 'eslint:recommended',
  plugins: [
    'promise',
  ],
  rules: {
    // first reduce some recommended levels
    'no-console': 'warn',
    'no-debugger': 'warn',
    'no-mixed-spaces-and-tabs': 'off',
    'no-octal': 'off',

    // potential problems
    'array-callback-return': 'error',
    'dot-notation': 'error',
    'eqeqeq': ['error', 'smart'],
    'no-caller': 'error',
    'no-confusing-arrow': 'error',
    'no-duplicate-imports': 'error',
    'no-else-return': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-multi-str': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal-escape': 'error',
    'no-proto': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-undef-init': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-useless-call': 'error',
    'no-useless-return': 'error',
    'no-use-before-define': ['error', 'nofunc'],
    'no-useless-computed-key': 'error',
    'no-useless-constructor': 'error',
    'no-useless-rename': 'error',
    'no-with': 'error',
    'strict': 'error',
    'yoda': ['error', 'never', { onlyEquality: true }],

    // potential Node.js problems
    'callback-return': 'error',
    'handle-callback-err': 'error',
    'no-buffer-constructor': 'error',
    'no-new-require': 'error',
    'no-path-concat': 'error',
    'no-sync': 'warn',

    // force modern syntax
    'no-restricted-properties': [
      'error',
      {
        object: 'Math',
        property: 'pow',
        message: 'Use the exponentiation operator (**) instead of Math.pow()',
      },
    ],
    'no-var': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-numeric-literals': 'error',
    'prefer-template': 'error',
    'prefer-spread': 'error',
    'prefer-rest-params': 'error',
    'prefer-object-spread': 'error',

    // safer, cleaner code
    'accessor-pairs': 'error',
    'array-bracket-spacing': ['error', 'always', {
      arraysInArrays: false,
      objectsInArrays: false
    }],
    'arrow-parens': ['error', 'as-needed', {'requireForBlockBody': true}],
    'block-spacing': 'error',
    'brace-style': ['error', '1tbs'],
    'camelcase': ['error', {'properties': 'always'}],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['error', {
      'before': false,
      'after': true,
    }],
    'comma-style': ['error', 'last'],
    'curly': ['error', 'all'],
    'default-case': 'error',
    'eol-last': 'error',
    'func-call-spacing': 'error',
    'function-paren-newline': ['error', 'multiline'],
    'implicit-arrow-linebreak': 'error',
    'indent': ['error', 'tab'],
    'keyword-spacing': ['error', {
      'before': true,
      'after': true,
    }],
    'linebreak-style': ['error', 'unix'],
    'max-len': ['error', {
      'code': 80,
      'tabWidth': 2,
      'comments': 80,
      'ignoreStrings': true,
      'ignoreTemplateLiterals': true,
      'ignoreRegExpLiterals': true,
    }],
    'max-lines-per-function': ['error', 50, {
      'skipComments': true,
      'IIFEs': true,
    }],
    'max-lines': ['error', 300],
    'max-statements': ['error', 10, {'ignoreTopLevelFunctions': false}],
    'max-statements-per-line': ['error', 1],
    'no-alert': 'warn',
    'no-lonely-if': 'error',
    'no-loops': require('./rules/no-loop.js'),
    'no-magic-numbers': 'error',
    'no-multi-spaces': 'error',
    'no-multiple-empty-lines': 'error',
    'no-nested-ternary': 'error',
    'no-trailing-spaced': 'error',
    'object-curly-spacing': ['error', 'always', {
      'arraysInObjects': false,
      'objectsInObjects': false,
    }],
    'optimize-regex': require('./rules/optimize-regex'),
    'padded-blocks': ['error', 'never'],
    'prefer-const': 'error',
    'prefer-named-capture-group': 'warn',
    'quotes': ['error', 'single', {allowTemplateLiterals: true}],
    'semi': ['error', 'always'],
    'semi-style': ['error', 'last'],
    'symbol-description': 'error',

    // enable plugins
    'promise/always-return': 'error',
    'promise/avoid-new': 'warn',
    'promise/catch-or-return': 'error',
    'promise/no-callback-in-promise': 'warn',
    'promise/no-native': 'off',
    'promise/no-nesting': 'warn',
    'promise/no-new-statics': 'error',
    'promise/no-promise-in-callback': 'warn',
    'promise/no-return-in-finally': 'warn',
    'promise/no-return-wrap': 'error',
    'promise/param-names': 'error',
    'promise/prefer-await-to-callbacks': 'warn',
    'promise/prefer-await-to-then': 'warn',
    'promise/valid-params': 'warn',
  },
};
